// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String @id @default(uuid())
  email        String @unique
  password     String @db.VarChar(255)
  name         String @db.VarChar(255)
  lastName     String @db.VarChar(255)
  profilePic   String @default("")
  profilePicId String @default("")

  bannerPic   String @default("")
  bannerPicId String @default("")

  friendCode String  @unique
  isPrivate  Boolean @default(true)

  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  sentMessages     Message[] @relation("SenderMessages")
  receivedMessages Message[] @relation("ReceiverMessages")

  friendships Friendship[] @relation("senderToReceiver")
  friendsOf   Friendship[] @relation("receiverToSender")
}

model Friendship {
  id         String   @id @default(uuid())
  senderId   String
  receiverId String
  sender     User     @relation("senderToReceiver", fields: [senderId], references: [id])
  receiver   User     @relation("receiverToSender", fields: [receiverId], references: [id])
  createdAt  DateTime @default(now())

  @@unique([senderId, receiverId])
}

model Message {
  id         String @id @default(uuid())
  senderId   String
  receiverId String
  sender     User   @relation("SenderMessages", fields: [senderId], references: [id])
  receiver   User   @relation("ReceiverMessages", fields: [receiverId], references: [id])

  content   String   @db.VarChar(255)
  createdAt DateTime @default(now())
  isRead    Boolean  @default(false)
}
